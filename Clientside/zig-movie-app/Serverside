 clientside/zig-movie-app/README.md
0 → 100644
View file @ fa24e432
	
	This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).
	
	
	
	## Available Scripts
	
	
	
	In the project directory, you can run:
	
	
	
	### `npm start`
	
	
	
	Runs the app in the development mode.<br>
	
	Open [http://localhost:3000](http://localhost:3000) to view it in the browser.
	
	
	
	The page will reload if you make edits.<br>
	
	You will also see any lint errors in the console.
	
	
	
	### `npm test`
	
	
	
	Launches the test runner in the interactive watch mode.<br>
	
	See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.
	
	
	
	### `npm run build`
	
	
	
	Builds the app for production to the `build` folder.<br>
	
	It correctly bundles React in production mode and optimizes the build for the best performance.
	
	
	
	The build is minified and the filenames include the hashes.<br>
	
	Your app is ready to be deployed!
	
	
	
	See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.
	
	
	
	### `npm run eject`
	
	
	
	**Note: this is a one-way operation. Once you `eject`, you can’t go back!**
	
	
	
	If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.
	
	
	
	Instead, it will copy all the configuration files and the transitive dependencies (Webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.
	
	
	
	You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.
	
	
	
	## Learn More
	
	
	
	You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).
	
	
	
	To learn React, check out the [React documentation](https://reactjs.org/).
clientside/zig-movie-app/package-lock.json
0 → 100644
View file @ fa24e432
This diff is collapsed.
clientside/zig-movie-app/package.json
0 → 100644
View file @ fa24e432
	
	{
	
	  "name": "zig-movie-app",
	
	  "version": "0.1.0",
	
	  "private": true,
	
	  "dependencies": {
	
	    "@types/jest": "23.3.10",
	
	    "@types/node": "10.12.18",
	
	    "@types/react": "16.7.18",
	
	    "@types/react-dom": "16.0.11",
	
	    "react": "^16.7.0",
	
	    "react-dom": "^16.7.0",
	
	    "react-scripts": "2.1.2",
	
	    "typescript": "3.2.2"
	
	  },
	
	  "scripts": {
	
	    "start": "react-scripts start",
	
	    "build": "react-scripts build",
	
	    "test": "react-scripts test",
	
	    "eject": "react-scripts eject"
	
	  },
	
	  "eslintConfig": {
	
	    "extends": "react-app"
	
	  },
	
	  "browserslist": [
	
	    ">0.2%",
	
	    "not dead",
	
	    "not ie <= 11",
	
	    "not op_mini all"
	
	  ]
	
	}
clientside/zig-movie-app/public/favicon.ico
0 → 100644
View file @ fa24e432
clientside/zig-movie-app/public/favicon.ico

3.78 KB
clientside/zig-movie-app/public/index.html
0 → 100644
View file @ fa24e432
	
	<!DOCTYPE html>
	
	<html lang="en">
	
	  <head>
	
	    <meta charset="utf-8" />
	
	    <link rel="shortcut icon" href="%PUBLIC_URL%/favicon.ico" />
	
	    <meta
	
	      name="viewport"
	
	      content="width=device-width, initial-scale=1, shrink-to-fit=no"
	
	    />
	
	    <meta name="theme-color" content="#000000" />
	
	    <!--
	
	      manifest.json provides metadata used when your web app is added to the
	
	      homescreen on Android. See https://developers.google.com/web/fundamentals/web-app-manifest/
	
	    -->
	
	    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
	
	    <!--
	
	      Notice the use of %PUBLIC_URL% in the tags above.
	
	      It will be replaced with the URL of the `public` folder during the build.
	
	      Only files inside the `public` folder can be referenced from the HTML.
	
	
	
	      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
	
	      work correctly both with client-side routing and a non-root public URL.
	
	      Learn how to configure a non-root public URL by running `npm run build`.
	
	    -->
	
	    <title>React App</title>
	
	  </head>
	
	  <body>
	
	    <noscript>You need to enable JavaScript to run this app.</noscript>
	
	    <div id="root"></div>
	
	    <!--
	
	      This HTML file is a template.
	
	      If you open it directly in the browser, you will see an empty page.
	
	
	
	      You can add webfonts, meta tags, or analytics to this file.
	
	      The build step will place the bundled scripts into the <body> tag.
	
	
	
	      To begin the development, run `npm start` or `yarn start`.
	
	      To create a production bundle, use `npm run build` or `yarn build`.
	
	    -->
	
	  </body>
	
	</html>
clientside/zig-movie-app/public/manifest.json
0 → 100644
View file @ fa24e432
	
	{
	
	  "short_name": "React App",
	
	  "name": "Create React App Sample",
	
	  "icons": [
	
	    {
	
	      "src": "favicon.ico",
	
	      "sizes": "64x64 32x32 24x24 16x16",
	
	      "type": "image/x-icon"
	
	    }
	
	  ],
	
	  "start_url": ".",
	
	  "display": "standalone",
	
	  "theme_color": "#000000",
	
	  "background_color": "#ffffff"
	
	}
clientside/zig-movie-app/src/App.css
0 → 100644
View file @ fa24e432
	
	.App {
	
	  text-align: center;
	
	}
	
	
	
	.App-logo {
	
	  animation: App-logo-spin infinite 20s linear;
	
	  height: 40vmin;
	
	}
	
	
	
	.App-header {
	
	  background-color: #282c34;
	
	  min-height: 100vh;
	
	  display: flex;
	
	  flex-direction: column;
	
	  align-items: center;
	
	  justify-content: center;
	
	  font-size: calc(10px + 2vmin);
	
	  color: white;
	
	}
	
	
	
	.App-link {
	
	  color: #61dafb;
	
	}
	
	
	
	@keyframes App-logo-spin {
	
	  from {
	
	    transform: rotate(0deg);
	
	  }
	
	  to {
	
	    transform: rotate(360deg);
	
	  }
	
	}
clientside/zig-movie-app/src/App.test.tsx
0 → 100644
View file @ fa24e432
	
	import React from 'react';
	
	import ReactDOM from 'react-dom';
	
	import App from './App';
	
	
	
	it('renders without crashing', () => {
	
	  const div = document.createElement('div');
	
	  ReactDOM.render(<App />, div);
	
	  ReactDOM.unmountComponentAtNode(div);
	
	});
clientside/zig-movie-app/src/App.tsx
0 → 100644
View file @ fa24e432
	
	import React, { Component } from 'react';
	
	import './App.css';
	
	import Description from './Description';
	
	import Header from './Header';
	
	import logo from './logo.svg';
	
	
	
	class App extends React.Component {
	
	  public render() {
	
	    return (
	
	      <div className="App">
	
	        <header className="App-header">
	
	          <img src={logo} className="App-logo" alt="logo" />
	
	          <Header name="CODER" />
	
	        </header>
	
	        <Description countBy={3} />
	
	      </div>
	
	    );
	
	  }
	
	}
	
	
	
	
	
	export default App;
clientside/zig-movie-app/src/Description.tsx
0 → 100644
View file @ fa24e432
	
	import * as React from 'react';
	
	
	
	interface IProps {
	
	  countBy?: number;
	
	}
	
	
	
	interface IState {
	
	  count: number;
	
	}
	
	
	
	class Description extends React.Component<IProps, IState> {
	
	  public static defaultProps: Partial<IProps> = {
	
	    countBy: 1,
	
	  };
	
	
	
	  public state: IState = {
	
	    count: 0,
	
	  };
	
	
	
	  public increase = () => {
	
	    const countBy: number = this.props.countBy!;
	
	    const count = this.state.count + countBy;
	
	    this.setState({ count });
	
	  };
	
	
	
	  public render() {
	
	    return (
	
	      <div>
	
	          <p>The simple counter below helps demonstrate the right way to pass data around in this App.</p>
	
	        <p>My favorite number is {this.state.count}</p>
	
	        <button onClick={this.increase}>Increase</button>
	
	      </div>
	
	    );
	
	  }
	
	}
	
	
	
	export default Description;
clientside/zig-movie-app/src/Header.tsx
0 → 100644
View file @ fa24e432
	
	import * as React from 'react';
	
	
	
	interface IProps {
	
	  name?: string;
	
	}
	
	
	
	const Header: React.SFC<IProps> = (props: IProps) => (
	
	  <h1>Hello, {props.name}! Welcome to THE ZIG Coding Challenge.</h1>
	
	);
	
	
	
	Header.defaultProps = {
	
	  name: 'world',
	
	};
	
	
	
	export default Header;
		\ No newline at end of file
clientside/zig-movie-app/src/index.css
0 → 100644
View file @ fa24e432
	
	body {
	
	  margin: 0;
	
	  padding: 0;
	
	  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
	
	    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
	
	    sans-serif;
	
	  -webkit-font-smoothing: antialiased;
	
	  -moz-osx-font-smoothing: grayscale;
	
	}
	
	
	
	code {
	
	  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
	
	    monospace;
	
	}
clientside/zig-movie-app/src/index.tsx
0 → 100644
View file @ fa24e432
	
	import React from 'react';
	
	import ReactDOM from 'react-dom';
	
	import './index.css';
	
	import App from './App';
	
	import * as serviceWorker from './serviceWorker';
	
	
	
	ReactDOM.render(<App />, document.getElementById('root'));
	
	
	
	// If you want your app to work offline and load faster, you can change
	
	// unregister() to register() below. Note this comes with some pitfalls.
	
	// Learn more about service workers: http://bit.ly/CRA-PWA
	
	serviceWorker.unregister();
clientside/zig-movie-app/src/logo.svg
0 → 100644
View file @ fa24e432
	
	<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3">
	
	    <g fill="#61DAFB">
	
	        <path d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/>
	
	        <circle cx="420.9" cy="296.5" r="45.7"/>
	
	        <path d="M520.5 78.1z"/>
	
	    </g>
	
	</svg>
clientside/zig-movie-app/src/react-app-env.d.ts
0 → 100644
View file @ fa24e432
	
	/// <reference types="react-scripts" />
clientside/zig-movie-app/src/serviceWorker.ts
0 → 100644
View file @ fa24e432
	
	// This optional code is used to register a service worker.
	
	// register() is not called by default.
	
	
	
	// This lets the app load faster on subsequent visits in production, and gives
	
	// it offline capabilities. However, it also means that developers (and users)
	
	// will only see deployed updates on subsequent visits to a page, after all the
	
	// existing tabs open on the page have been closed, since previously cached
	
	// resources are updated in the background.
	
	
	
	// To learn more about the benefits of this model and instructions on how to
	
	// opt-in, read http://bit.ly/CRA-PWA
	
	
	
	const isLocalhost = Boolean(
	
	  window.location.hostname === 'localhost' ||
	
	    // [::1] is the IPv6 localhost address.
	
	    window.location.hostname === '[::1]' ||
	
	    // 127.0.0.1/8 is considered localhost for IPv4.
	
	    window.location.hostname.match(
	
	      /^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/
	
	    )
	
	);
	
	
	
	type Config = {
	
	  onSuccess?: (registration: ServiceWorkerRegistration) => void;
	
	  onUpdate?: (registration: ServiceWorkerRegistration) => void;
	
	};
	
	
	
	export function register(config?: Config) {
	
	  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {
	
	    // The URL constructor is available in all browsers that support SW.
	
	    const publicUrl = new URL(
	
	      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,
	
	      window.location.href
	
	    );
	
	    if (publicUrl.origin !== window.location.origin) {
	
	      // Our service worker won't work if PUBLIC_URL is on a different origin
	
	      // from what our page is served on. This might happen if a CDN is used to
	
	      // serve assets; see https://github.com/facebook/create-react-app/issues/2374
	
	      return;
	
	    }
	
	
	
	    window.addEventListener('load', () => {
	
	      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;
	
	
	
	      if (isLocalhost) {
	
	        // This is running on localhost. Let's check if a service worker still exists or not.
	
	        checkValidServiceWorker(swUrl, config);
	
	
	
	        // Add some additional logging to localhost, pointing developers to the
	
	        // service worker/PWA documentation.
	
	        navigator.serviceWorker.ready.then(() => {
	
	          console.log(
	
	            'This web app is being served cache-first by a service ' +
	
	              'worker. To learn more, visit http://bit.ly/CRA-PWA'
	
	          );
	
	        });
	
	      } else {
	
	        // Is not localhost. Just register service worker
	
	        registerValidSW(swUrl, config);
	
	      }
	
	    });
	
	  }
	
	}
	
	
	
	function registerValidSW(swUrl: string, config?: Config) {
	
	  navigator.serviceWorker
	
	    .register(swUrl)
	
	    .then(registration => {
	
	      registration.onupdatefound = () => {
	
	        const installingWorker = registration.installing;
	
	        if (installingWorker == null) {
	
	          return;
	
	        }
	
	        installingWorker.onstatechange = () => {
	
	          if (installingWorker.state === 'installed') {
	
	            if (navigator.serviceWorker.controller) {
	
	              // At this point, the updated precached content has been fetched,
	
	              // but the previous service worker will still serve the older
	
	              // content until all client tabs are closed.
	
	              console.log(
	
	                'New content is available and will be used when all ' +
	
	                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'
	
	              );
	
	
	
	              // Execute callback
	
	              if (config && config.onUpdate) {
	
	                config.onUpdate(registration);
	
	              }
	
	            } else {
	
	              // At this point, everything has been precached.
	
	              // It's the perfect time to display a
	
	              // "Content is cached for offline use." message.
	
	              console.log('Content is cached for offline use.');
	
	
	
	              // Execute callback
	
	              if (config && config.onSuccess) {
	
	                config.onSuccess(registration);
	
	              }
	
	            }
	
	          }
	
	        };
	
	      };
	
	    })
	
	    .catch(error => {
	
	      console.error('Error during service worker registration:', error);
	
	    });
	
	}
	
	
	
	function checkValidServiceWorker(swUrl: string, config?: Config) {
	
	  // Check if the service worker can be found. If it can't reload the page.
	
	  fetch(swUrl)
	
	    .then(response => {
	
	      // Ensure service worker exists, and that we really are getting a JS file.
	
	      const contentType = response.headers.get('content-type');
	
	      if (
	
	        response.status === 404 ||
	
	        (contentType != null && contentType.indexOf('javascript') === -1)
	
	      ) {
	
	        // No service worker found. Probably a different app. Reload the page.
	
	        navigator.serviceWorker.ready.then(registration => {
	
	          registration.unregister().then(() => {
	
	            window.location.reload();
	
	          });
	
	        });
	
	      } else {
	
	        // Service worker found. Proceed as normal.
	
	        registerValidSW(swUrl, config);
	
	      }
	
	    })
	
	    .catch(() => {
	
	      console.log(
	
	        'No internet connection found. App is running in offline mode.'
	
	      );
	
	    });
	
	}
	
	
	
	export function unregister() {
	
	  if ('serviceWorker' in navigator) {
	
	    navigator.serviceWorker.ready.then(registration => {
	
	      registration.unregister();
	
	    });
	
	  }
	
	}
clientside/zig-movie-app/tsconfig.json
0 → 100644
View file @ fa24e432
	
	{
	
	  "compilerOptions": {
	
	    "target": "es5",
	
	    "lib": [
	
	      "dom",
	
	      "dom.iterable",
	
	      "esnext"
	
	    ],
	
	    "allowJs": true,
	
	    "skipLibCheck": true,
	
	    "esModuleInterop": true,
	
	    "allowSyntheticDefaultImports": true,
	
	    "strict": true,
	
	    "forceConsistentCasingInFileNames": true,
	
	    "module": "esnext",
	
	    "moduleResolution": "node",
	
	    "resolveJsonModule": true,
	
	    "isolatedModules": true,
	
	    "noEmit": true,
	
	    "jsx": "preserve"
	
	  },
	
	  "include": [
	
	    "src"
	
	  ]
	
	}
serverside/Controllers/ValuesController.cs
0 → 100644
View file @ fa24e432
	
	﻿using System;
	
	using System.Collections.Generic;
	
	using System.Linq;
	
	using System.Threading.Tasks;
	
	using Microsoft.AspNetCore.Mvc;
	
	
	
	namespace serverside.Controllers
	
	{
	
	    [Route("api/[controller]")]
	
	    [ApiController]
	
	    public class ValuesController : ControllerBase
	
	    {
	
	        // GET api/values
	
	        [HttpGet]
	
	        public ActionResult<IEnumerable<string>> Get()
	
	        {
	
	            return new string[] { "value1", "value2" };
	
	        }
	
	
	
	        // GET api/values/5
	
	        [HttpGet("{id}")]
	
	        public ActionResult<string> Get(int id)
	
	        {
	
	            return "value";
	
	        }
	
	
	
	        // POST api/values
	
	        [HttpPost]
	
	        public void Post([FromBody] string value)
	
	        {
	
	        }
	
	
	
	        // PUT api/values/5
	
	        [HttpPut("{id}")]
	
	        public void Put(int id, [FromBody] string value)
	
	        {
	
	        }
	
	
	
	        // DELETE api/values/5
	
	        [HttpDelete("{id}")]
	
	        public void Delete(int id)
	
	        {
	
	        }
	
	    }
	
	}
serverside/Program.cs
0 → 100644
View file @ fa24e432
	
	﻿using System;
	
	using System.Collections.Generic;
	
	using System.IO;
	
	using System.Linq;
	
	using System.Threading.Tasks;
	
	using Microsoft.AspNetCore;
	
	using Microsoft.AspNetCore.Hosting;
	
	using Microsoft.Extensions.Configuration;
	
	using Microsoft.Extensions.Logging;
	
	
	
	namespace serverside
	
	{
	
	    public class Program
	
	    {
	
	        public static void Main(string[] args)
	
	        {
	
	            CreateWebHostBuilder(args).Build().Run();
	
	        }
	
	
	
	        public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>
	
	            WebHost.CreateDefaultBuilder(args)
	
	                .UseStartup<Startup>();
	
	    }
	
	}
serverside/Properties/launchSettings.json
0 → 100644
View file @ fa24e432
	
	﻿{
	
	  "$schema": "http://json.schemastore.org/launchsettings.json",
	
	  "iisSettings": {
	
	    "windowsAuthentication": false, 
	
	    "anonymousAuthentication": true, 
	
	    "iisExpress": {
	
	      "applicationUrl": "http://localhost:15468",
	
	      "sslPort": 44325
	
	    }
	
	  },
	
	  "profiles": {
	
	    "IIS Express": {
	
	      "commandName": "IISExpress",
	
	      "launchBrowser": true,
	
	      "launchUrl": "api/values",
	
	      "environmentVariables": {
	
	        "ASPNETCORE_ENVIRONMENT": "Development"
	
	      }
	
	    },
	
	    "serverside": {
	
	      "commandName": "Project",
	
	      "launchBrowser": true,
	
	      "launchUrl": "api/values",
	
	      "applicationUrl": "https://localhost:5001;http://localhost:5000",
	
	      "environmentVariables": {
	
	        "ASPNETCORE_ENVIRONMENT": "Development"
	
	      }
	
	    }
	
	  }
	
	}
		\ No newline at end of file
serverside/Startup.cs
0 → 100644
View file @ fa24e432
	
	﻿using System;
	
	using System.Collections.Generic;
	
	using System.Linq;
	
	using System.Threading.Tasks;
	
	using Microsoft.AspNetCore.Builder;
	
	using Microsoft.AspNetCore.Hosting;
	
	using Microsoft.AspNetCore.HttpsPolicy;
	
	using Microsoft.AspNetCore.Mvc;
	
	using Microsoft.Extensions.Configuration;
	
	using Microsoft.Extensions.DependencyInjection;
	
	using Microsoft.Extensions.Logging;
	
	using Microsoft.Extensions.Options;
	
	
	
	namespace serverside
	
	{
	
	    public class Startup
	
	    {
	
	        public Startup(IConfiguration configuration)
	
	        {
	
	            Configuration = configuration;
	
	        }
	
	
	
	        public IConfiguration Configuration { get; }
	
	
	
	        // This method gets called by the runtime. Use this method to add services to the container.
	
	        public void ConfigureServices(IServiceCollection services)
	
	        {
	
	            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);
	
	        }
	
	
	
	        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
	
	        public void Configure(IApplicationBuilder app, IHostingEnvironment env)
	
	        {
	
	            if (env.IsDevelopment())
	
	            {
	
	                app.UseDeveloperExceptionPage();
	
	            }
	
	            else
	
	            {
	
	                app.UseHsts();
	
	            }
	
	
	
	            app.UseHttpsRedirection();
	
	            app.UseMvc();
	
	        }
	
	    }
	
	}
serverside/appsettings.Development.json
0 → 100644
View file @ fa24e432
	
	{
	
	  "Logging": {
	
	    "LogLevel": {
	
	      "Default": "Debug",
	
	      "System": "Information",
	
	      "Microsoft": "Information"
	
	    }
	
	  }
	
	}
serverside/appsettings.json
0 → 100644
View file @ fa24e432
	
	{
	
	  "Logging": {
	
	    "LogLevel": {
	
	      "Default": "Warning"
	
	    }
	
	  },
	
	  "AllowedHosts": "*"
	
	}
serverside/serverside.csproj
0 → 100644
View file @ fa24e432
	
	<Project Sdk="Microsoft.NET.Sdk.Web">
	
	
	
	  <PropertyGroup>
	
	    <TargetFramework>netcoreapp2.1</TargetFramework>
	
	  </PropertyGroup>
	
	
	
	  <ItemGroup>
	
	    <Folder Include="wwwroot\" />
	
	  </ItemGroup>
	
	
	
	  <ItemGroup>
	
	    <PackageReference Include="Microsoft.AspNetCore.App" />
	
	  </ItemGroup>
	
	
	
	</Project>

Please register or sig
